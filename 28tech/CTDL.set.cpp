size(): tr·∫£ v·ªÅ k√≠ch th∆∞·ªõc hi·ªán t·∫°i c·ªßa set
empty(): true n·∫øu set r·ªóng v√† ng∆∞·ª£c l·∫°i
insert(): th√™m(ch√®n) m·ªôt ph·∫ßn t·ª≠ v√†o trong set
find(): tr·∫£ v·ªÅ interator tr·ªè ƒë·∫øn ph·∫ßn t·ª≠ c·∫ßn t√¨m ki·∫øm n·∫øu kh√¥ng t√¨m th·∫•y interator tr·ªè v·ªÅ end c·ªßa set
count(): tr·∫£ v·ªÅ s·ªë l·∫ßn xu·∫•t hi·ªán c·ªßa kho√° trong container . nh∆∞ng trong set c√°c ph·∫ßn t·ª≠ ch·ªâ xu·∫•t hi·ªán 1 l·∫ßn n√™n h√†m n√†y c√≥ √Ω nghƒ©a l√† s·∫Ω return 1 n·∫øu kho√° c√≥ trong container v√† 0 n·∫øu kh√¥ng c√≥ 

üî¥ find()
#include <iostream>
#include <set>
using namespace std;

int main()
{
    set<int>s;
    for(int i=0;i<10;i++){
        s.insert(i);
    }
    cout << s.size()<<endl;
    if(s.find(5) != s.end()){
        cout << "found !\n";
    }else{
        cout << "not found !\n";
    }
    return 0;
}
